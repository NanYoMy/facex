{"name":"Facex","tagline":"Geometrical Face Features Extraction","body":"This software is the result of the first approach effort to develop a geometrical \r\nfacial features extraction algorithm. It was developed in Sao Paulo University (Brazil), \r\nand in cooperation with Universidad Politecnica de Madrid (Spain) and Carnegie Mellon \r\nUniversity (USA). It covers mouth, eyes, eyebrows, nosetrils, and face tilt estimation.\r\n\r\nWatch a demo here: http://www.youtube.com/watch?v=2wYHoMu7kXo\r\n\r\n    (make it full quality and full screen or you will not see the details)\r\n \r\nIt provides a very simple interface based on a single C/C++ class named \"Face\" that \r\nwill compute the location of the mentioned points of geomatrical interest of the face \r\nthe provided image. See \"face.h\".\r\n\r\nIf you take a look at the screeshot images in the source directory you may notice \r\nhow robust it is against typical sources of occlusion such as hair, glasses and \r\nforehead wrinkles.\r\n\r\n![Screenshot](https://raw.github.com/sdcoca/facex/master/ImageSetUp_OR.png)\r\n\r\nPerformance was totally prioriticed over precission. The extraction algorithm takes \r\nfrom 300usec to 1.5 ms on a desktop PC. It still has to be cleaned up from some \r\nunnecessary operations but shows promising results. \r\n\r\nAdditionaly, the lack of accuracy can be easely palliated with temporal filtering \r\ntechniques. This is shown in the template example \"faceImitator.cpp\".\r\n\r\nWe are working on a inteligent imitation algorithm for applications in social robotics\r\nas well.\r\n\r\nThe algorithm is robust to 2D rotations but not to 3D changes in pose. Optical flow \r\ncould be used for 3D tracking after face detection but it is not developed yet. This \r\nwould strongly improve the robustness of the algorithm.\r\n\r\n\r\nPlease, note that this code was a research effort without commercial purposes so:\r\n\r\n  \r\n  - You are highly welcome to improve it and send it back to us to make it available!! ;-)\r\n\r\n  - You may note that the code is a bit dirty, buggy and badly commented. Sorry for that.\r\n  \r\n  - There are many things that could be improved such as using color information to\r\n    improve lips boundaries detection, and or add kalman/time filtering for accuracy.\r\n  \r\n  - It works fine in Ubuntu but can show some problems with integer arithmetics in Windows.\r\n\r\n  - Feel free to contact to share ideas or contribute!.\r\n  \r\nThis software uses the well known and brilliant OpenCV library for image processing \r\nalgorithms and you will need it to be able to build it: http://opencv.org/\r\n\r\nYou can find a description of the algortihm in the paper cited below. Please quote the\r\nauthors in any relevant work you make out of this software.\r\n\r\n\r\nde Carvalho Santos, V.; Romero, R.A.F.; Coca, S.R.D.-M., \"Imitation of Facial Expressions for a Virtual Robotic Head,\" Robotics Symposium and Latin American Robotics Symposium (SBR-LARS), 2012 Brazilian , vol., no., pp.251,254, 16-19 Oct. 2012\r\ndoi: 10.1109/SBR-LARS.2012.48\r\nkeywords: {computer vision;feature extraction;human-robot interaction;computer vision;eye extraction;eyebrows;face detection;face tilt angle;facial expressions;mouth characteristic points;natural interaction;nostrils;real-time geometric facial features extraction;social robots;virtual robotic head;Computer architecture;Eyebrows;Face;Feature extraction;Humans;Mouth;Robots;facial expression;facial features extraction;imitation},\r\nURL: http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6363351&isnumber=6363255","google":"UA-39720649-1","note":"Don't delete this file! It's used internally to help with page regeneration."}